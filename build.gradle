apply plugin: 'java-library'

// Værdien kan være mellem 7 og 9. JDK 10+ fanges ikke af Android Studio
sourceCompatibility = "9"
compileJava.options.encoding = "UTF-8"

dependencies {
    // Ikke nødvendig pt - og spærrede for nem implementering med Docker, så afhængigheden er pt fjernet
    //implementation project(path: ':datamodel')

    // REST-server: Javalin
    compile 'io.javalin:javalin:3.7.0'
    compile "org.slf4j:slf4j-simple:1.7.28" // Nødvendig til javalin
    // JSON-parser Jackson
    //implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    // Men kan bedre lide gson, der fylder en del mindre:
    compile 'com.google.code.gson:gson:2.8.6'

    // REST-klient: Unirest
    implementation 'com.konghq:unirest-java:3.4.03'
    //implementation 'com.mashape.unirest:unirest-java:1.4.9'

    // Parsning af kommandolinjeparametre - se https://picocli.info/
    compile 'info.picocli:picocli:4.2.0'

    // For at Cloud Run kan gemme filer....
    compile 'com.google.cloud:google-cloud-storage:1.104.0'

    // Afprøvning
    testCompile("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.6.0")
    //testRuntime("org.junit.platform:junit-platform-runner:1.6.0")
}


test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

// til at bygge artefaktet daisy/build/libs/daisy.jar
jar {
    // JAR-filen har en main-metode
    manifest {
        attributes "Main-Class": "eu.nitrogensensor.daisy.DaisyMain"
    }

    // Lav en 'fat JAR' hvor alle biblioteker er pakket med i JAR-filen
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
